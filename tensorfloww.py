# -*- coding: utf-8 -*-
"""tensorfloww.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12sHf3dhp-OuVoeSQ1pBGkNfreWTXGEuE
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf

dataFrame=pd.read_excel("bisiklet_fiyatlari.xlsx")

dataFrame.head()

import seaborn as sns

sns.pairplot(dataFrame)

from sklearn.model_selection import train_test_split

y=dataFrame["Fiyat"].values
x=dataFrame[["BisikletOzellik1","BisikletOzellik2"]].values
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.33,random_state=15)

x_train.shape

x_test.shape

from sklearn.preprocessing import MinMaxScaler

scaler=MinMaxScaler()

scaler.fit(x_train)

x_train=scaler.transform(x_train)
x_test=scaler.transform(x_test)

x_train

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

model=Sequential()
model.add(Dense(4,activation="relu"))
model.add(Dense(4,activation="relu"))
model.add(Dense(4,activation="relu"))
model.add(Dense(1))
model.compile(optimizer="rmsprop",loss="mse")

model.fit(x_train,y_train,epochs=250)

loss=model.history.history["loss"]

sns.lineplot(x=range(len(loss)),y=loss)

train_loss=model.evaluate(x_train,y_train,verbose=0)
test_loss=model.evaluate(x_test,y_test,verbose=0)

test_tahminleri=model.predict(x_test)

tahminDf=pd.DataFrame(y_test,columns=["gercek_fiyat"])

test_tahminleri=pd.Series(test_tahminleri.reshape(330,))

tahminDf=pd.concat([tahminDf,test_tahminleri],axis=1)

tahminDf.columns=["gercek_fiyat","tahmin_fiyat"]

sns.scatterplot(x="gercek_fiyat",y="tahmin_fiyat",data=tahminDf)

from sklearn.metrics import mean_absolute_error,mean_squared_error

mean_absolute_error(tahminDf["gercek_fiyat"],tahminDf["tahmin_fiyat"])

dataFrame.describe()

yeniBisikletOzellikleri=[[1760,1758]]
yeniBisikletOzellikleri=scaler.transform(yeniBisikletOzellikleri)

model.predict(yeniBisikletOzellikleri)

!pip install tensorflow

from tensorflow import keras
from tensorflow.keras.models import load_model

model.save("bisiklet_modeli.h5")

sonra_model=load_model("bisiklet_modeli.h5")

